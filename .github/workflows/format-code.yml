name: Code Formatting

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        # Fetch full history for proper blame info
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install formatting tools
      run: |
        pip install --upgrade pip
        pip install black isort flake8 pylint
        
    - name: Check code formatting with Black
      run: |
        black --check --diff .
        
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
        
    - name: Check code quality with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
  auto-format:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: format
    # Only run auto-format on main branch pushes and if format check fails
    continue-on-error: true
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install formatting tools
      run: |
        pip install --upgrade pip
        pip install black isort
        
    - name: Format code with Black
      run: |
        black .
        
    - name: Sort imports with isort
      run: |
        isort .
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit formatted code
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Auto-format code with Black and isort [skip ci]"
        git push